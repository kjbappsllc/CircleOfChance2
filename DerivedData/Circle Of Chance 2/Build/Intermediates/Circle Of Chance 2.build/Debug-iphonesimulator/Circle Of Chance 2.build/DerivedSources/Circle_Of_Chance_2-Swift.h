// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import ObjectiveC;
@import SpriteKit;
@import CoreGraphics;
@import Foundation;
@import GameKit;
@import StoreKit;
#endif

#import "/Users/mac/Desktop/Circle Of Chance 2/Circle Of Chance 2/Circle Of Chance 2-Bridging-Header.h"

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC18Circle_Of_Chance_211AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18Circle_Of_Chance_215CurrencyManager")
@interface CurrencyManager : NSObject
@property (nonatomic) NSInteger coins;
@property (nonatomic) NSInteger totalCoins;
@property (nonatomic) NSInteger games;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SKNode;
@class SKSpriteNode;
@class SKLabelNode;
@class GKAchievement;
@class SKView;
@class UITouch;
@class UIEvent;
@class UIColor;
@class SKAction;
@class NSCoder;

SWIFT_CLASS("_TtC18Circle_Of_Chance_28GameOver")
@interface GameOver : SKScene <ChartboostDelegate>
@property (nonatomic, readonly, strong) SKNode * _Nonnull gameOverLayer;
@property (nonatomic, strong) SKSpriteNode * _Nonnull shadowBG;
@property (nonatomic, strong) SKSpriteNode * _Nonnull homeButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull replay;
@property (nonatomic, strong) SKSpriteNode * _Nonnull movieButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull gameOverSign;
@property (nonatomic, strong) SKSpriteNode * _Nonnull coinsBox;
@property (nonatomic) NSInteger coinsMade;
@property (nonatomic, strong) CurrencyManager * _Nonnull currency;
@property (nonatomic, strong) SKLabelNode * _Nonnull score;
@property (nonatomic) NSInteger scoring;
@property (nonatomic, strong) SKSpriteNode * _Nonnull highscoreRect;
@property (nonatomic, strong) SKLabelNode * _Nonnull highscoreTitle;
@property (nonatomic, strong) SKLabelNode * _Nonnull highscore;
@property (nonatomic, strong) SKLabelNode * _Nonnull coinsMadeNotifier;
@property (nonatomic, copy) NSDictionary<NSString *, GKAchievement *> * _Nonnull gameCenterAchievements;
- (void)didMoveToView:(SKView * _Nonnull)view;
- (void)loadView;
- (void)addBackground;
- (void)addGameOver;
- (void)removeGameOver:(NSString * _Nonnull)type completion:(void (^ _Nonnull)(void))completion;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)didCompleteRewardedVideo:(NSString * _Null_unspecified)location withReward:(int32_t)reward;
- (void)didCloseRewardedVideo:(NSString * _Null_unspecified)location;
- (void)loadAchievementPercentages;
- (void)incrementCurrentPercentageOfAchievement:(NSString * _Nonnull)identifier amount:(double)amount;
- (void)reportAchievement:(NSString * _Nonnull)identifier percentComplete:(double)percentComplete;
- (SKAction * _Nonnull)changeFontAction:(SKLabelNode * _Nonnull)label color:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithSize:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class barrier;
@class UIBezierPath;
@class SKPhysicsContact;

SWIFT_CLASS("_TtC18Circle_Of_Chance_29GameScene")
@interface GameScene : SKScene <SKPhysicsContactDelegate>
@property (nonatomic, strong) barrier * _Nonnull barrier1;
@property (nonatomic, strong) barrier * _Nonnull barrier2;
@property (nonatomic, strong) barrier * _Nonnull barrier3;
@property (nonatomic, strong) barrier * _Nonnull barrier4;
@property (nonatomic, strong) barrier * _Nonnull barrier5;
@property (nonatomic, strong) barrier * _Nonnull barrier6;
@property (nonatomic, strong) SKSpriteNode * _Nonnull topBar;
@property (nonatomic, strong) SKSpriteNode * _Nonnull pause;
@property (nonatomic, readonly, strong) SKLabelNode * _Nonnull levelText;
@property (nonatomic) NSInteger levelInt;
@property (nonatomic, strong) SKLabelNode * _Nonnull scoreText;
@property (nonatomic, strong) SKLabelNode * _Nonnull score;
@property (nonatomic, strong) SKSpriteNode * _Nonnull homeButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull pausePlayButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull pauseSound;
@property (nonatomic, strong) SKSpriteNode * _Nonnull pauseMusic;
@property (nonatomic) NSInteger highscoreInt;
@property (nonatomic, strong) SKLabelNode * _Nonnull highscore;
@property (nonatomic) NSInteger scoreInt;
@property (nonatomic, strong) SKLabelNode * _Nonnull newHighScore;
@property (nonatomic, strong) UIBezierPath * _Nonnull Path;
@property (nonatomic) BOOL movingClockWise;
@property (nonatomic) BOOL gameStarted;
@property (nonatomic) BOOL isGameOver;
@property (nonatomic) BOOL IsPaused;
@property (nonatomic) BOOL barriersReversed;
@property (nonatomic) BOOL highScoreAchieved;
@property (nonatomic) BOOL checkpoint;
@property (nonatomic, strong) CurrencyManager * _Nonnull currency;
@property (nonatomic, strong) SKSpriteNode * _Nonnull starHit;
@property (nonatomic, copy) NSDictionary<NSString *, GKAchievement *> * _Nonnull gameCenterAchievements;
- (void)didMoveToView:(SKView * _Nonnull)view;
- (void)loadView;
- (void)addBackground;
- (void)addGamePlayArea;
- (void)addHud;
- (void)animateBeginGame:(void (^ _Nonnull)(void))completion_;
- (void)animateEndGame:(void (^ _Nonnull)(void))completion;
- (void)addBarriers;
- (void)MoveBarriers;
- (void)ReversedMoveBarriers;
- (void)addScoreUnits;
- (void)animateDot:(SKSpriteNode * _Nonnull)circle location:(CGPoint)location completion:(void (^ _Nonnull)(void))completion;
- (void)addBall:(void (^ _Nonnull)(void))completion;
- (void)moveCounterClockWise;
- (void)moveClockWise;
- (double)randomPercent;
- (void)updatePointAchievements;
- (void)handleNewLevel;
- (void)addBarrierBreakParticles:(barrier * _Nonnull)bar;
- (void)handleStarPickup:(SKNode * _Nonnull)node;
- (void)handleScoreUnitContact:(SKNode * _Nonnull)node;
- (void)didBeginContact:(SKPhysicsContact * _Nonnull)contact;
- (void)gameOver:(SKNode * _Nonnull)node;
- (void)IrregularMotion;
- (void)fluctuateBall;
- (void)Ghost;
- (void)Haste;
- (void)FluctuateBarriers;
- (void)Shake;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)pause:(NSSet<UITouch *> * _Nonnull)touches;
- (void)saveHighscore:(NSInteger)gameScore;
- (void)loadAchievementPercentages;
- (void)incrementCurrentPercentageOfAchievement:(NSString * _Nonnull)identifier amount:(double)amount;
- (void)reportAchievement:(NSString * _Nonnull)identifier percentComplete:(double)percentComplete;
- (void)resetAchievements;
- (void)update:(NSTimeInterval)currentTime;
- (nonnull instancetype)initWithSize:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class GKGameCenterViewController;
@class NSBundle;

SWIFT_CLASS("_TtC18Circle_Of_Chance_218GameViewController")
@interface GameViewController : UIViewController <GKGameCenterControllerDelegate>
@property (nonatomic, copy) NSString * _Nullable leaderboardIdentifier;
@property (nonatomic) BOOL gameCenterEnabled;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)authenticateLocalPlayer;
- (void)gameCenterViewControllerDidFinish:(GKGameCenterViewController * _Nonnull)gameCenterViewController;
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (void)didReceiveMemoryWarning;
@property (nonatomic, readonly) BOOL prefersStatusBarHidden;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC18Circle_Of_Chance_29IAPHelper")
@interface IAPHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull IAPHelperPurchaseNotification;)
+ (NSString * _Nonnull)IAPHelperPurchaseNotification;
- (nonnull instancetype)initWithProductIds:(NSSet<NSString *> * _Nonnull)productIds OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class SKProductsRequest;
@class SKProductsResponse;
@class SKRequest;

@interface IAPHelper (SWIFT_EXTENSION(Circle_Of_Chance_2)) <SKProductsRequestDelegate, SKRequestDelegate>
- (void)productsRequest:(SKProductsRequest * _Nonnull)request didReceiveResponse:(SKProductsResponse * _Nonnull)response;
- (void)request:(SKRequest * _Nonnull)request didFailWithError:(NSError * _Nonnull)error;
@end

@class SKProduct;

@interface IAPHelper (SWIFT_EXTENSION(Circle_Of_Chance_2))
- (void)requestProducts:(void (^ _Nonnull)(BOOL, NSArray<SKProduct *> * _Nullable))completionHandler;
- (void)buyProduct:(SKProduct * _Nonnull)product;
- (BOOL)isProductPurchased:(NSString * _Nonnull)productIdentifier;
+ (BOOL)canMakePayments;
- (void)restorePurchases;
@end

@class SKPaymentQueue;
@class SKPaymentTransaction;

@interface IAPHelper (SWIFT_EXTENSION(Circle_Of_Chance_2)) <SKPaymentTransactionObserver>
- (void)paymentQueue:(SKPaymentQueue * _Nonnull)queue updatedTransactions:(NSArray<SKPaymentTransaction *> * _Nonnull)transactions;
@end

@class UIView;
@class UIButton;
@class SKShapeNode;

SWIFT_CLASS("_TtC18Circle_Of_Chance_28MainMenu")
@interface MainMenu : SKScene <GKGameCenterControllerDelegate>
@property (nonatomic, readonly, strong) SKNode * _Nonnull titleLayer;
@property (nonatomic, readonly, strong) SKNode * _Nonnull topButtonLayer;
@property (nonatomic, readonly, strong) SKNode * _Nonnull bottomButtonLayer;
@property (nonatomic, readonly, strong) SKNode * _Nonnull playButtonLayer;
@property (nonatomic, strong) SKSpriteNode * _Nonnull topBar;
@property (nonatomic, strong) SKSpriteNode * _Nonnull title;
@property (nonatomic, strong) SKSpriteNode * _Nonnull playButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull shopButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull helpButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull settingsButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull achievementsButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull highscoreButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull rateButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull progressButton;
@property (nonatomic, strong) SKNode * _Nonnull bottomNode;
@property (nonatomic, strong) UIView * _Nonnull helpView;
@property (nonatomic, strong) UIButton * _Nonnull howToPlayButton;
@property (nonatomic, strong) UIButton * _Nonnull cardDescriptionsButton;
@property (nonatomic) BOOL helpViewActive;
@property (nonatomic) BOOL notNewPlayer;
@property (nonatomic, strong) SKSpriteNode * _Nonnull newPlayerTip;
@property (nonatomic, strong) SKShapeNode * _Nonnull backGround;
- (void)didMoveToView:(SKView * _Nonnull)view;
- (void)loadview;
- (void)animateBeginGame:(void (^ _Nonnull)(void))completion;
- (void)animateExit:(void (^ _Nonnull)(void))completion;
- (void)addBackground;
- (void)addTopArea;
- (void)addPlayButton;
- (void)addButtons;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)showLeaderOrAchievements:(GKGameCenterViewControllerState)state;
- (void)gameCenterViewControllerDidFinish:(GKGameCenterViewController * _Nonnull)gameCenterViewController;
- (nonnull instancetype)initWithSize:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSSet;

SWIFT_CLASS("_TtC18Circle_Of_Chance_213SettingsScene")
@interface SettingsScene : SKScene
@property (nonatomic, strong) SKNode * _Nonnull topBarLayer;
@property (nonatomic, strong) SKNode * _Nonnull buttonLayer;
@property (nonatomic, strong) SKSpriteNode * _Nonnull backButton;
@property (nonatomic, strong) SKSpriteNode * _Nonnull soundContainer;
@property (nonatomic, strong) SKSpriteNode * _Nonnull musicContainer;
@property (nonatomic, strong) SKSpriteNode * _Nonnull volumeIcon;
@property (nonatomic, strong) SKSpriteNode * _Nonnull restorePurchases;
@property (nonatomic, strong) SKSpriteNode * _Nonnull musicIcon;
@property (nonatomic, strong) SKSpriteNode * _Nonnull changeMusic;
@property (nonatomic, strong) SKLabelNode * _Nonnull settingsText;
@property (nonatomic, strong) SKLabelNode * _Nonnull restorePurchasesText;
@property (nonatomic, strong) SKSpriteNode * _Nonnull settingsBar;
@property (nonatomic, readonly, strong) NSSet * _Nonnull productID;
@property (nonatomic, strong) IAPHelper * _Nullable store;
- (void)didMoveToView:(SKView * _Nonnull)view;
- (void)loadview;
- (void)addBackground;
- (void)addButtons;
- (void)animateEnter:(void (^ _Nonnull)(void))completion;
- (void)animateExit:(void (^ _Nonnull)(void))completion;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithSize:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class item;

SWIFT_CLASS("_TtC18Circle_Of_Chance_29ShopScene")
@interface ShopScene : SKScene <ChartboostDelegate>
@property (nonatomic, strong) CurrencyManager * _Nonnull currency;
@property (nonatomic, readonly, strong) NSSet * _Nonnull productID;
@property (nonatomic, strong) IAPHelper * _Nullable store;
@property (nonatomic, copy) NSArray<SKProduct *> * _Nonnull list;
@property (nonatomic) BOOL doubleCoinsBool;
@property (nonatomic, strong) SKSpriteNode * _Nonnull doubleCoins;
@property (nonatomic, strong) SKSpriteNode * _Nonnull backButton;
@property (nonatomic, strong) SKNode * _Nonnull topBar;
@property (nonatomic, strong) SKLabelNode * _Nonnull coins;
@property (nonatomic, strong) SKNode * _Nonnull selectionLayer;
@property (nonatomic, strong) SKSpriteNode * _Nonnull skinsSection;
@property (nonatomic, strong) SKSpriteNode * _Nonnull themesSection;
@property (nonatomic) BOOL skins_selected;
@property (nonatomic, strong) SKNode * _Nonnull moveableArea;
@property (nonatomic, strong) SKSpriteNode * _Nonnull itemSelectionBG;
@property (nonatomic, strong) SKLabelNode * _Nonnull current;
@property (nonatomic, strong) SKLabelNode * _Nonnull end;
@property (nonatomic, strong) SKNode * _Nonnull counterNode;
@property (nonatomic, strong) SKSpriteNode * _Nonnull selectionIndicator;
@property (nonatomic, copy) NSArray<item *> * _Nonnull shopSkins;
@property (nonatomic, copy) NSArray<item *> * _Nonnull shopThemes;
@property (nonatomic, copy) NSArray<item *> * _Nonnull unlockedItems;
@property (nonatomic) CGFloat startX;
@property (nonatomic) CGFloat lastX;
@property (nonatomic) NSInteger beginLimit;
@property (nonatomic) NSInteger furthestLimit;
@property (nonatomic) NSInteger currentItem;
@property (nonatomic) NSInteger currentItemSkin;
@property (nonatomic) NSInteger currentItemTheme;
@property (nonatomic) BOOL moved;
- (void)didMoveToView:(SKView * _Nonnull)view;
- (void)loadView;
- (void)addItems:(NSArray<item *> * _Nonnull)nodes isSkin:(BOOL)isSkin;
- (void)setUpLabel:(SKLabelNode * _Nonnull)label size:(CGFloat)size fontName:(NSString * _Nonnull)fontName fontColor:(UIColor * _Nonnull)fontColor;
- (void)animateEnter:(void (^ _Nonnull)(void))completion;
- (void)animateExit:(void (^ _Nonnull)(void))completion;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)handleItemTap:(UITouch * _Nonnull)touch;
- (void)handlePurchaseNotification:(NSNotification * _Nonnull)notification;
- (nonnull instancetype)initWithSize:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class SKTexture;

SWIFT_CLASS("_TtC18Circle_Of_Chance_28StarIcon")
@interface StarIcon : SKSpriteNode
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)animateStar;
- (void)LoadPhysics;
- (nonnull instancetype)initWithTexture:(SKTexture * _Nullable)texture color:(UIColor * _Nonnull)color size:(CGSize)size SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18Circle_Of_Chance_27barrier")
@interface barrier : SKSpriteNode
@property (nonatomic) BOOL passable;
@property (nonatomic) CGFloat barrierSpeed;
@property (nonatomic) BOOL isActive;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)canPass;
- (void)notPassable;
- (void)removeBarrier;
- (void)addRedBarrier;
- (void)loadPhysicsBodySize:(CGSize)size;
- (CGFloat)GetBarrierSpeed;
- (CGFloat)SetBarrierSpeed:(CGFloat)newValue;
- (nonnull instancetype)initWithTexture:(SKTexture * _Nullable)texture color:(UIColor * _Nonnull)color size:(CGSize)size SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18Circle_Of_Chance_24item")
@interface item : NSObject <NSCoding>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull DocumentsDirectory;)
+ (NSURL * _Nonnull)DocumentsDirectory;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull UnlockedArchiveURL;)
+ (NSURL * _Nonnull)UnlockedArchiveURL;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull CurrentArchiveURL;)
+ (NSURL * _Nonnull)CurrentArchiveURL;
@property (nonatomic, strong) SKSpriteNode * _Nonnull sprite;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) NSInteger price;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC18Circle_Of_Chance_213itemContainer")
@interface itemContainer : SKSpriteNode
@property (nonatomic, strong) item * _Nonnull shopItem;
- (nonnull instancetype)initWithShopItem:(item * _Nonnull)shopItem OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTexture:(SKTexture * _Nullable)texture color:(UIColor * _Nonnull)color size:(CGSize)size SWIFT_UNAVAILABLE;
@end

#pragma clang diagnostic pop
